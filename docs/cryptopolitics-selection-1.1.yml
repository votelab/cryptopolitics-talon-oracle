openapi: 3.0.1
info:
  title: Cryptopolitics Selection
  description: Cryptopolitics talon transformations engine
  contact:
    name: InBlocks developers
    url: https://inblocks.io/
    email: contact@inblocks.io
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: "1.1"
paths:
  /talon/applyTransformations:
    post:
      summary: Compute the result of applying transformation(s) to a talon
      description: "Given a talon and a list of transformations, return the transformed\
        \ talon and the list of results of each transformation"
      operationId: applyTransformations
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TalonController.ApplyTransformationQuery'
        required: true
      responses:
        "200":
          description: "Valid transformations, return the list of their results and\
            \ the new talon state"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplyResult'
        "400":
          description: "No such class, serie or card; or a requested class was empty."
        "409":
          description: Talon or card already exist.
  /talon/checkTransformations:
    post:
      summary: Check that persisted talon results are consistent
      description: "Apply the list of transformations to the persisted talonBefore\
        \ state, using the persisted random seed, and check that the results match"
      operationId: checkTransformations
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersistedTalon'
        required: true
      responses:
        "200":
          description: Results match persisted results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Object'
        "409":
          description: Computed results and persisted results don't match
  /talon/seedGenerator/{generatorName}/{seedIndex}:
    get:
      operationId: getSeed
      parameters:
      - name: generatorName
        in: path
        required: true
        schema:
          type: string
      - name: seedIndex
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: getSeed 200 response
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    AddCardsTransformation:
      required:
      - cards
      type: object
      properties:
        cards:
          type: array
          items:
            $ref: '#/components/schemas/Card'
    ApplyResult:
      type: object
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/Object'
        talon:
          $ref: '#/components/schemas/Talon'
        seedGenerator:
          $ref: '#/components/schemas/SeedGeneratorParams'
    Card:
      required:
      - orderNumber
      - originalClass
      - serieName
      type: object
      properties:
        originalClass:
          type: string
        serieName:
          type: string
        orderNumber:
          type: integer
          format: int32
    CardClass:
      required:
      - cardClass
      - deprecatedSeries
      - infinite
      - series
      type: object
      properties:
        cardClass:
          type: string
        infinite:
          type: boolean
        series:
          type: array
          items:
            $ref: '#/components/schemas/CardSerie'
        deprecatedSeries:
          type: array
          items:
            $ref: '#/components/schemas/CardSerie'
    CardSerie:
      required:
      - initialDealIndex
      - name
      - size
      type: object
      properties:
        name:
          type: string
        size:
          type: integer
          format: int32
        setBitmap:
          type: string
          description: Base64 encoding of the bitmap of cards present
          example: A////w==
        unminted:
          type: integer
          format: int32
        initialDealIndex:
          type: integer
          format: int32
    ChestType:
      type: string
      enum:
      - FREE
      - COMMON
      - RARE
      - EPIC
      - LEGENDARY
      - ETERNAL
    DeprecateSeriesTransformation:
      required:
      - seriesToDeprecate
      type: object
      properties:
        seriesToDeprecate:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
    ExtendTalonTransformation:
      required:
      - additionalCards
      type: object
      properties:
        additionalCards:
          $ref: '#/components/schemas/Talon'
    FromClass:
      allOf:
      - $ref: '#/components/schemas/Record'
      - required:
        - cardClass
        type: object
        properties:
          cardClass:
            minLength: 1
            type: string
    FromSerie:
      allOf:
      - $ref: '#/components/schemas/Record'
      - required:
        - cardClass
        - cardSerie
        type: object
        properties:
          cardClass:
            minLength: 1
            type: string
          cardSerie:
            minLength: 1
            type: string
    InitTransformation:
      required:
      - seedGenerator
      - setup
      type: object
      properties:
        setup:
          $ref: '#/components/schemas/Talon'
        seedGenerator:
          $ref: '#/components/schemas/SeedGeneratorParams'
    Object:
      type: object
    OneOf:
      allOf:
      - $ref: '#/components/schemas/Record'
      - required:
        - weightedSelections
        type: object
        properties:
          weightedSelections:
            minItems: 1
            type: array
            items:
              $ref: '#/components/schemas/Weighted_Selection_'
    OpenChestTransformation:
      required:
      - chestType
      type: object
      properties:
        results:
          $ref: '#/components/schemas/Object'
        chestType:
          $ref: '#/components/schemas/ChestType'
        pickCardsTransformation:
          $ref: '#/components/schemas/PickCardsTransformation'
    PersistedTalon:
      required:
      - results
      - seedGenerator
      - talonBefore
      - transformations
      - version
      type: object
      properties:
        version:
          type: integer
          format: int64
        talonBefore:
          $ref: '#/components/schemas/Talon'
        transformations:
          type: array
          items:
            $ref: '#/components/schemas/Transformation'
        seedGenerator:
          $ref: '#/components/schemas/SeedGeneratorParams'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Object'
    PickCardsTransformation:
      required:
      - selection
      type: object
      properties:
        results:
          $ref: '#/components/schemas/Object'
        selection:
          $ref: '#/components/schemas/Selection'
        pickedCards:
          type: array
          items:
            $ref: '#/components/schemas/Card'
    Record:
      type: object
    SeedGeneratorParams:
      required:
      - index
      - name
      - seedUsed
      type: object
      properties:
        name:
          type: string
        index:
          type: integer
          format: int64
        seedUsed:
          type: string
          nullable: true
    Selection:
      type: object
      anyOf:
      - $ref: '#/components/schemas/FromClass'
      - $ref: '#/components/schemas/FromSerie'
      - $ref: '#/components/schemas/OneOf'
      - $ref: '#/components/schemas/TheCard'
      - $ref: '#/components/schemas/Times'
      - $ref: '#/components/schemas/Together'
    Talon:
      required:
      - classes
      type: object
      properties:
        classes:
          type: array
          items:
            $ref: '#/components/schemas/CardClass'
    TalonController.ApplyTransformationQuery:
      required:
      - transformations
      type: object
      properties:
        talon:
          allOf:
          - $ref: '#/components/schemas/Talon'
          - nullable: true
        seedGenerator:
          allOf:
          - $ref: '#/components/schemas/SeedGeneratorParams'
          - nullable: true
        transformations:
          type: array
          items:
            $ref: '#/components/schemas/Transformation'
    TheCard:
      allOf:
      - $ref: '#/components/schemas/Record'
      - required:
        - cardClass
        - cardSerie
        - orderNumber
        type: object
        properties:
          cardClass:
            minLength: 1
            type: string
          cardSerie:
            minLength: 1
            type: string
          orderNumber:
            type: integer
            format: int32
    Times:
      allOf:
      - $ref: '#/components/schemas/Record'
      - required:
        - selection
        - times
        type: object
        properties:
          times:
            minimum: 0
            type: integer
            format: int32
          selection:
            $ref: '#/components/schemas/Selection'
    Together:
      allOf:
      - $ref: '#/components/schemas/Record'
      - required:
        - selections
        type: object
        properties:
          selections:
            type: array
            items:
              $ref: '#/components/schemas/Selection'
    Transformation:
      type: object
      anyOf:
      - $ref: '#/components/schemas/InitTransformation'
      - $ref: '#/components/schemas/PickCardsTransformation'
      - $ref: '#/components/schemas/AddCardsTransformation'
      - $ref: '#/components/schemas/OpenChestTransformation'
      - $ref: '#/components/schemas/ExtendTalonTransformation'
      - $ref: '#/components/schemas/DeprecateSeriesTransformation'
    Weighted_Selection_:
      allOf:
      - $ref: '#/components/schemas/Record'
      - required:
        - thing
        - weight
        type: object
        properties:
          thing:
            $ref: '#/components/schemas/Selection'
          weight:
            minimum: 0
            type: integer
            format: int32
